<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dacer Blog]]></title>
  <link href="http://blog.dacer.im/atom.xml" rel="self"/>
  <link href="http://blog.dacer.im/"/>
  <updated>2014-02-16T18:56:21+08:00</updated>
  <id>http://blog.dacer.im/</id>
  <author>
    <name><![CDATA[Dacer]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Code School笔记 - jQuery Part2 level 1]]></title>
    <link href="http://blog.dacer.im/blog/2014/02/16/code-school-bi-ji-jquery-part2-level-1/"/>
    <updated>2014-02-16T19:10:57+08:00</updated>
    <id>http://blog.dacer.im/blog/2014/02/16/code-school-bi-ji-jquery-part2-level-1</id>
    <content type="html"><![CDATA[<h3>Ajax Basics</h3>

<p>使用Ajax时需要在网站后加上<code>?dc=123</code>之类的参数时可以用<code>data</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">(</span><span class="s1">&#39;confirmation.html&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>   <span class="nx">success</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>     <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;.ticket&#39;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">response</span><span class="p">).</span><span class="nx">slideDown</span><span class="p">();</span>
</span><span class='line'>   <span class="p">},</span>
</span><span class='line'>   <span class="nx">data</span><span class="o">:</span> <span class="p">{</span> <span class="s2">&quot;confNum&quot;</span><span class="o">:</span> <span class="mi">1234</span> <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="c1">//confirmation.html?confNum=1234</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[增加了多说的评论系统]]></title>
    <link href="http://blog.dacer.im/blog/2014/02/16/zeng-jia-liao-duo-shuo-de-ping-lun-xi-tong/"/>
    <updated>2014-02-16T18:17:00+08:00</updated>
    <id>http://blog.dacer.im/blog/2014/02/16/zeng-jia-liao-duo-shuo-de-ping-lun-xi-tong</id>
    <content type="html"><![CDATA[<p>参考了</p>

<blockquote><p><a href="http://havee.me/internet/2013-02/add-duoshuo-commemt-system-into-octopress.html">http://havee.me/internet/2013-02/add-duoshuo-commemt-system-into-octopress.html</a></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[简化Octopress发布步骤]]></title>
    <link href="http://blog.dacer.im/blog/2014/02/16/jian-hua-octopressfa-bu-bu-zou/"/>
    <updated>2014-02-16T17:43:24+08:00</updated>
    <id>http://blog.dacer.im/blog/2014/02/16/jian-hua-octopressfa-bu-bu-zou</id>
    <content type="html"><![CDATA[<p>用了一段时间 Octopress 确实挺好用的，就是发布需要两个步骤</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>bundle exec rake generate
</span><span class='line'>bundle exec rake deploy  </span></code></pre></td></tr></table></div></figure>


<p>灰常麻烦，下面说说怎么简化：<br/>
首先<code>bundle exec</code>前缀是因为Gemfile中rake版本号被限定在旧的版本号了，把那行简化为</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#Gemfile</span>
</span><span class='line'><span class="n">gem</span> <span class="s1">&#39;rake&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后再</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">bundle</span> <span class="n">update</span>
</span></code></pre></td></tr></table></div></figure>


<p>就行了，<br/>
下一步是合并生成和发布，打开<code>Rakefile</code>,随便找个地方copy</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">desc</span> <span class="s2">&quot;Generate + Deploy&quot;</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:d</span> <span class="k">do</span>
</span><span class='line'>  <span class="ss">Rake</span><span class="p">:</span><span class="ss">:Task</span><span class="o">[</span><span class="ss">:generate</span><span class="o">].</span><span class="n">execute</span>
</span><span class='line'>  <span class="ss">Rake</span><span class="p">:</span><span class="ss">:Task</span><span class="o">[</span><span class="ss">:deploy</span><span class="o">].</span><span class="n">execute</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后以后要发布的时候用<code>rake d</code>就行了，灰常舒服<br/>
顺便也可以把preview简化一下</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">desc</span> <span class="s2">&quot;Preview&quot;</span>
</span><span class='line'><span class="n">task</span> <span class="ss">:p</span> <span class="k">do</span>
</span><span class='line'>  <span class="ss">Rake</span><span class="p">:</span><span class="ss">:Task</span><span class="o">[</span><span class="ss">:preview</span><span class="o">].</span><span class="n">execute</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后用<code>rake p</code>即可</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code School笔记 - Zombie Outlaws level 5]]></title>
    <link href="http://blog.dacer.im/blog/2014/02/15/code-school-bi-ji-zombie-outlaws-level-5/"/>
    <updated>2014-02-15T19:10:57+08:00</updated>
    <id>http://blog.dacer.im/blog/2014/02/15/code-school-bi-ji-zombie-outlaws-level-5</id>
    <content type="html"><![CDATA[<h2>Test Your Mettle</h2>

<h3>Rake Tasks</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake test:models
</span><span class='line'>rake test:controllers
</span><span class='line'>rake test:helpers
</span><span class='line'>rake test:mailers</span></code></pre></td></tr></table></div></figure>


<h1>需回顾：</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby -Itest test/models/location_test.rb  #raises pending migration error</span></code></pre></td></tr></table></div></figure>


<h3>Re-Adding Performance Testing</h3>

<p>在 Rails 4 中需要添加 gem 实现</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem 'rails-perftest'
</span><span class='line'>gem 'ruby-prof'</span></code></pre></td></tr></table></div></figure>


<h3>Skip</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ItemTest</span> <span class="o">&lt;</span> <span class="ss">ActiveSupport</span><span class="p">:</span><span class="ss">:TestCase</span>
</span><span class='line'>  <span class="nb">test</span> <span class="s2">&quot;can shorten its name&quot;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">item</span> <span class="o">=</span> <span class="no">Item</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>    <span class="n">item</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;Super-duper long name&quot;</span>
</span><span class='line'>    <span class="n">assert_equal</span> <span class="s2">&quot;Super-duper&quot;</span><span class="p">,</span> <span class="n">item</span><span class="o">.</span><span class="n">short_name</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="nb">test</span> <span class="s2">&quot;doesn&#39;t shorten short names&quot;</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">skip</span> <span class="c1">#Use &quot;skip&quot; method if you don&#39;t want to run a test right now</span>
</span><span class='line'>    <span class="n">item</span> <span class="o">=</span> <span class="no">Item</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>    <span class="n">item</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;Name&quot;</span>
</span><span class='line'>    <span class="n">assert_equal</span> <span class="s2">&quot;Name&quot;</span><span class="p">,</span> <span class="n">item</span><span class="o">.</span><span class="n">short_name</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Minitest Test_Opts</h3>

<p>get passed as test parameters
Verbose mode shows run time and skip status for each test</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">rake</span> <span class="nb">test</span><span class="ss">:models</span> <span class="no">TEST_OPTS</span><span class="o">=</span><span class="s2">&quot;--verbose&quot;</span>
</span><span class='line'><span class="no">Run</span> <span class="ss">options</span><span class="p">:</span> <span class="o">--</span><span class="n">verbose</span> <span class="o">--</span><span class="n">seed</span> <span class="mi">57945</span>
</span><span class='line'><span class="c1"># Running tests:</span>
</span><span class='line'><span class="no">ItemTest</span><span class="c1">#test_can_shorten_its_name = 0.07 s = .</span>
</span><span class='line'><span class="no">ItemTest</span><span class="c1">#test_doesn&#39;t_shorten_short_names = 0.00 s = S</span>
</span><span class='line'><span class="no">Finished</span> <span class="n">tests</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="mo">076</span><span class="mi">938</span><span class="n">s</span><span class="p">,</span> <span class="mi">25</span><span class="o">.</span><span class="mi">9950</span> <span class="n">tests</span><span class="o">/</span><span class="n">s</span><span class="p">,</span> <span class="mi">12</span><span class="o">.</span><span class="mi">9975</span>
</span><span class='line'><span class="n">assertions</span><span class="o">/</span><span class="n">s</span><span class="o">.</span>
</span><span class='line'><span class="mi">2</span> <span class="n">tests</span><span class="p">,</span> <span class="mi">1</span> <span class="n">assertions</span><span class="p">,</span> <span class="mi">0</span> <span class="n">failures</span><span class="p">,</span> <span class="mi">0</span> <span class="n">errors</span><span class="p">,</span> <span class="mi">1</span> <span class="n">skips</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code School笔记 - Zombie Outlaws level 4]]></title>
    <link href="http://blog.dacer.im/blog/2014/02/15/code-school-bi-ji-zombie-outlaws-level-4/"/>
    <updated>2014-02-15T19:10:57+08:00</updated>
    <id>http://blog.dacer.im/blog/2014/02/15/code-school-bi-ji-zombie-outlaws-level-4</id>
    <content type="html"><![CDATA[<h2>Views &amp; Vistas</h2>

<h3>Collection Form Helpers</h3>

<p>Rail 4 提供了更多的helpers</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Owner</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>   <span class="n">has_many</span> <span class="ss">:items</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'> <span class="k">class</span> <span class="nc">Item</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>   <span class="n">belongs_to</span> <span class="ss">:owner</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">collection_select</span><span class="p">(</span><span class="ss">:item</span><span class="p">,</span> <span class="ss">:owner_id</span><span class="p">,</span> <span class="no">Owner</span><span class="o">.</span><span class="n">all</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span><span class="p">)</span>
</span><span class='line'><span class="n">collection_radio_buttons</span><span class="p">(</span><span class="ss">:item</span><span class="p">,</span> <span class="ss">:owner_id</span><span class="p">,</span> <span class="no">Owner</span><span class="o">.</span><span class="n">all</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span><span class="p">)</span>
</span><span class='line'><span class="n">collection_check_boxes</span><span class="p">(</span><span class="ss">:item</span><span class="p">,</span> <span class="ss">:owner_id</span><span class="p">,</span> <span class="no">Owner</span><span class="o">.</span><span class="n">all</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:name</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Date Field</h3>

<p>Rails 4 提供了新的 <code>date_field</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">date_field</span> <span class="ss">:return_date</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Response Type From Controller</h3>

<p>默认返回json的格式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">index</span>
</span><span class='line'>   <span class="vi">@owners</span> <span class="o">=</span> <span class="no">Owner</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'>   <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>     <span class="nb">format</span><span class="o">.</span><span class="n">html</span>
</span><span class='line'>     <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="vi">@owners</span> <span class="p">}</span>
</span><span class='line'>   <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>自定义json返回的格式可以用<code>jbuilder</code>或者Rails 4 中新的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#views/owners/index.json.ruby</span>
</span><span class='line'><span class="n">owners_hashes</span> <span class="o">=</span> <span class="vi">@owners</span><span class="o">.</span><span class="n">map</span> <span class="k">do</span> <span class="o">|</span><span class="n">owner</span><span class="o">|</span>
</span><span class='line'>   <span class="p">{</span> <span class="nb">name</span><span class="p">:</span> <span class="n">owner</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="ss">url</span><span class="p">:</span> <span class="n">owner_url</span><span class="p">(</span><span class="n">owner</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">owners_hashes</span><span class="o">.</span><span class="n">to_json</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#Output</span>
</span><span class='line'><span class="o">[</span>
</span><span class='line'>  <span class="p">{</span><span class="s2">&quot;name&quot;</span><span class="ss">:&quot;Slow-draw&quot;</span><span class="p">,</span>  <span class="s2">&quot;url&quot;</span><span class="ss">:&quot;http://localhost:3000/owners/1&quot;</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="s2">&quot;name&quot;</span><span class="ss">:&quot;Sheriff&quot;</span><span class="p">,</span>    <span class="s2">&quot;url&quot;</span><span class="ss">:&quot;http://localhost:3000/owners/2&quot;</span><span class="p">},</span>
</span><span class='line'>  <span class="p">{</span><span class="s2">&quot;name&quot;</span><span class="ss">:&quot;Walking Ned&quot;</span><span class="p">,</span><span class="s2">&quot;url&quot;</span><span class="ss">:&quot;http://localhost:3000/owners/3&quot;</span><span class="p">}</span>
</span><span class='line'><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code School笔记 - Zombie Outlaws level 3]]></title>
    <link href="http://blog.dacer.im/blog/2014/02/15/code-school-bi-ji-zombie-outlaws-level-3/"/>
    <updated>2014-02-15T19:10:57+08:00</updated>
    <id>http://blog.dacer.im/blog/2014/02/15/code-school-bi-ji-zombie-outlaws-level-3</id>
    <content type="html"><![CDATA[<h2>Strong Parameters and Remote Forms &amp; Filters, Session, Custom Flash Types</h2>

<h3>Strong Parameters</h3>

<p>在rails 4的controller中必须指定可接受的params</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">user_params</span>
</span><span class='line'>  <span class="n">params</span><span class="o">.</span><span class="n">require</span><span class="p">(</span><span class="ss">:user</span><span class="p">)</span><span class="o">.</span><span class="n">permit</span><span class="p">(</span><span class="ss">:name</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中<code>rquire</code>会检查是否有参数中的key，没有则返回400错误，但并不会将这个key的值返回到<code>user_params</code>中，<code>permit</code>则会将参数中key对应的值返回<br/>
add this line if you want to raise errors for unpermitted params:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#config/application.rb</span>
</span><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">action_controller</span><span class="o">.</span><span class="n">action_on_unpermitted_parameters</span> <span class="o">=</span> <span class="ss">:raise</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Authenticity Token</h3>

<p>Rails 会自动在form中的value加入token来防止机器人的spam</p>

<h3>Action Controller Filters/Actions</h3>

<p>3中的<code>before_filter</code>变为了<code>before_action</code>,可以让Controller在部分方法call之前做出一些动作：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">PeopleController</span> <span class="o">&lt;</span> <span class="ss">ActionController</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">before_action</span> <span class="ss">:set_person</span><span class="p">,</span>      <span class="ss">except</span><span class="p">:</span> <span class="o">[</span> <span class="ss">:index</span><span class="p">,</span> <span class="ss">:new</span><span class="p">,</span> <span class="ss">:create</span> <span class="o">]</span>
</span><span class='line'>  <span class="n">before_action</span> <span class="ss">:ensure_permission</span><span class="p">,</span> <span class="ss">only</span><span class="p">:</span> <span class="o">[</span> <span class="ss">:edit</span><span class="p">,</span> <span class="ss">:update</span> <span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Flash Types</h3>

<p>以下方法可以生成flash信息：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="vi">@item</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'>  <span class="n">flash</span><span class="o">[</span><span class="ss">:notice</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;Item created.&#39;</span>
</span><span class='line'>  <span class="n">redirect_to</span> <span class="vi">@item</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="n">render</span> <span class="ss">action</span><span class="p">:</span> <span class="s1">&#39;new&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;p</span> <span class="na">id=</span><span class="s">&quot;notice&quot;</span><span class="nt">&gt;</span><span class="err">&lt;</span>%= flash[:notice] %&gt;<span class="nt">&lt;/p&gt;</span>
</span><span class='line'><span class="nt">&lt;p&gt;</span> <span class="nt">&lt;strong&gt;</span>Name:<span class="nt">&lt;/strong&gt;</span> <span class="err">&lt;</span>%= @item.name %&gt;
</span><span class='line'><span class="nt">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中erb部分可以简写为</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;p</span> <span class="na">id=</span><span class="s">&quot;notice&quot;</span><span class="nt">&gt;</span><span class="err">&lt;</span>%= notice %&gt;<span class="nt">&lt;/p&gt;</span>
</span><span class='line'><span class="nt">&lt;p</span> <span class="na">id=</span><span class="s">&quot;alert&quot;</span><span class="nt">&gt;</span><span class="err">&lt;</span>%= alert %&gt;<span class="nt">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>你也可以自定义flash类型</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">ApplicationController</span> <span class="o">&lt;</span> <span class="ss">ActionController</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">add_flash_types</span> <span class="ss">:grunt</span><span class="p">,</span> <span class="ss">:snarl</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#...</span>
</span><span class='line'><span class="n">flash</span><span class="o">[</span><span class="ss">:grunt</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;braaains...&#39;</span>
</span><span class='line'><span class="c1">#或者简写为</span>
</span><span class='line'><span class="n">redirect_to</span> <span class="vi">@user</span><span class="p">,</span> <span class="ss">grunt</span><span class="p">:</span> <span class="s1">&#39;braaains...&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;grunt&quot;</span><span class="nt">&gt;</span><span class="err">&lt;</span>%= grunt %&gt;<span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code School笔记 - Zombie Outlaws level 2]]></title>
    <link href="http://blog.dacer.im/blog/2014/02/15/code-school-bi-ji-zombie-outlaws-level-2/"/>
    <updated>2014-02-15T15:10:57+08:00</updated>
    <id>http://blog.dacer.im/blog/2014/02/15/code-school-bi-ji-zombie-outlaws-level-2</id>
    <content type="html"><![CDATA[<h2>ActiveRecord &amp; ActiveModel</h2>

<h3>Finders</h3>

<p>米什么好说的</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">author</span><span class="p">:</span> <span class="s1">&#39;admin&#39;</span><span class="p">)</span> <span class="c1"># returns an ActiveRecord::Relation</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Find_By</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="ss">title</span><span class="p">:</span> <span class="s1">&#39;Rails 4&#39;</span><span class="p">)</span> <span class="c1">#returns a single model object, or possibly a collection of model objects in an Array (not a Relation). If nothing is found, an ActiveRecord::RecordNotFound exception is raised.</span>
</span></code></pre></td></tr></table></div></figure>


<h4>Find_by 与 where</h4>

<p>用源码解释：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">find_by</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>  <span class="n">where</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span><span class="o">.</span><span class="n">take</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>所以可以接受和 where 一样的 arguments</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">find_by</span><span class="p">(</span><span class="s2">&quot;published_on &lt; ?&quot;</span><span class="p">,</span> <span class="mi">2</span><span class="o">.</span><span class="n">weeks</span><span class="o">.</span><span class="n">ago</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Find_or_*</h3>

<p>Rail 4 简化了 3 的<code>Find_or_*</code>方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">find_or_initialize_by</span><span class="p">(</span><span class="ss">title</span><span class="p">:</span> <span class="s2">&quot;rails 4&quot;</span><span class="p">)</span>
</span><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">find_or_create_by</span><span class="p">(</span><span class="ss">title</span><span class="p">:</span> <span class="s2">&quot;rails 4&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>其中<code>find_or_create_by</code>可以和<code>after_create</code>相结合使用：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">find_or_create_by</span><span class="p">(</span><span class="ss">title</span><span class="p">:</span> <span class="s1">&#39;Rails 4&#39;</span><span class="p">)</span>
</span><span class='line'><span class="c1">#if Post not found ↓</span>
</span><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">create</span><span class="p">(</span><span class="ss">title</span><span class="p">:</span> <span class="s1">&#39;Rails 4&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>    <span class="n">after_create</span> <span class="ss">:foo</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">foo</span>
</span><span class='line'>      <span class="n">posts</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">author</span><span class="p">:</span> <span class="s1">&#39;admin&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Update &amp; Update_column</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@post</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">post_params</span><span class="p">)</span> <span class="c1">#update attribute</span>
</span><span class='line'><span class="vi">@post</span><span class="o">.</span><span class="n">update_columns</span><span class="p">(</span><span class="n">post_params</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Model.all</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="vi">@tweets</span> <span class="o">=</span> <span class="no">Tweet</span><span class="o">.</span><span class="n">all</span> <span class="c1"># returns an ActiveRecord::Relation</span>
</span></code></pre></td></tr></table></div></figure>


<h2>第二部分</h2>

<h3>Scopes</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">scope</span> <span class="ss">:sold</span><span class="p">,</span> <span class="o">-&gt;</span><span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">state</span><span class="p">:</span> <span class="s1">&#39;sold&#39;</span><span class="p">)</span> <span class="p">}</span> <span class="c1">#scopes should take a proc object</span>
</span><span class='line'>
</span><span class='line'><span class="n">default_scope</span> <span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">state</span><span class="p">:</span> <span class="s1">&#39;available&#39;</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="n">default_scope</span> <span class="o">-&gt;</span><span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="ss">state</span><span class="p">:</span> <span class="s1">&#39;available&#39;</span><span class="p">)</span> <span class="p">}</span> <span class="c1">#defaults scopes should take proc object or a block￼￼</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Eager-Loaded Scopes</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">scope</span> <span class="ss">:recent</span><span class="p">,</span> <span class="o">-&gt;</span><span class="p">{</span> <span class="n">where</span><span class="p">(</span><span class="n">published_at</span><span class="p">:</span> <span class="mi">2</span><span class="o">.</span><span class="n">weeks</span><span class="o">.</span><span class="n">ago</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="n">scope</span> <span class="ss">:recent_red</span><span class="p">,</span> <span class="o">-&gt;</span><span class="p">{</span> <span class="n">recent</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">color</span><span class="p">:</span> <span class="s1">&#39;red&#39;</span><span class="p">)</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Relation#None</h3>

<p><code>.none</code>可以返回一个空的 ActiveRecord::Relation，避免在使用空的<code>array</code>时出现错误</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">case</span> <span class="n">role</span>
</span><span class='line'><span class="k">when</span> <span class="s2">&quot;Reviewer&quot;</span>
</span><span class='line'>  <span class="no">Post</span><span class="o">.</span><span class="n">published</span>
</span><span class='line'><span class="k">when</span> <span class="s2">&quot;Bad User&quot;</span>
</span><span class='line'>  <span class="no">Post</span><span class="o">.</span><span class="n">none</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Relation#Not</h3>

<p>在使用<code>where</code>寻找类似<code>user != ?</code>的不等于时如果参数是<code>nil</code>的话会报 SQL 错误，使用<code>.where.not</code>则会自动判别参数是否为空，且在非空时才执行SQL语句</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">where</span><span class="o">.</span><span class="n">not</span><span class="p">(</span><span class="ss">author</span><span class="p">:</span> <span class="n">author</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Relation#Order</h3>

<p>在 Rails 4 中如果<code>default_scope</code>已经有了<code>order()</code>后，再执行<code>.order</code>时这两者的先后顺序与 3 相反， Rails 4 会将<code>default_scope</code>中的放在后面：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">User</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>    <span class="n">default_scope</span> <span class="p">{</span> <span class="n">order</span><span class="p">(</span><span class="ss">:name</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="s2">&quot;created_at DESC&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="no">SELECT</span> <span class="o">*</span> <span class="no">FROM</span> <span class="n">users</span> <span class="no">ORDER</span> <span class="no">BY</span> <span class="nb">name</span> <span class="n">asc</span><span class="p">,</span> <span class="n">created_at</span> <span class="n">desc</span> <span class="c1"># Rails 3</span>
</span><span class='line'><span class="no">SELECT</span> <span class="o">*</span> <span class="no">FROM</span> <span class="n">users</span> <span class="no">ORDER</span> <span class="no">BY</span> <span class="n">created_at</span> <span class="n">desc</span><span class="p">,</span> <span class="nb">name</span> <span class="n">asc</span> <span class="c1"># Rails 4</span>
</span></code></pre></td></tr></table></div></figure>


<h4>手动排序</h4>

<p>Rails 4 可以使用 Hash 来排序</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="ss">:name</span><span class="p">,</span> <span class="n">created_at</span><span class="p">:</span> <span class="ss">:desc</span><span class="p">)</span>
</span><span class='line'><span class="no">User</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="n">created_at</span><span class="p">:</span> <span class="ss">:desc</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<h4>后面缩写的意思</h4>

<p>Asc : ascending order 递增<br/>
Desc : descending order 递减</p>

<h3>Relation#References</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:comments</span><span class="p">)</span><span class="o">.</span>
</span><span class='line'>  <span class="n">where</span><span class="p">(</span><span class="s2">&quot;comments.name = &#39;foo&#39;&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">references</span><span class="p">(</span><span class="ss">:comments</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>上例中，<code>.include</code>使返回值包含了与 Post 相关联的 comments，
在一下情况则无需使用<code>references</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:comments</span><span class="p">)</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="ss">comments</span><span class="p">:</span> <span class="p">{</span> <span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;foo&#39;</span> <span class="p">})</span>
</span><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:comments</span><span class="p">)</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s1">&#39;comments.name&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;foo&#39;</span><span class="p">)</span> <span class="c1">#hash-based conditions</span>
</span><span class='line'>
</span><span class='line'><span class="no">Post</span><span class="o">.</span><span class="n">includes</span><span class="p">(</span><span class="ss">:comments</span><span class="p">)</span><span class="o">.</span><span class="n">order</span><span class="p">(</span><span class="s1">&#39;comments.name&#39;</span><span class="p">)</span> <span class="c1">#no conditions</span>
</span></code></pre></td></tr></table></div></figure>


<h3>ActiveModel::Model</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">SupportTicket</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">ActiveModel</span><span class="p">:</span><span class="ss">:Conversion</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">ActiveModel</span><span class="p">:</span><span class="ss">:Validations</span>
</span><span class='line'>  <span class="kp">extend</span> <span class="ss">ActiveModel</span><span class="p">:</span><span class="ss">:Naming</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:description</span>
</span><span class='line'>  <span class="n">validates_presence_of</span> <span class="ss">:title</span>
</span><span class='line'>  <span class="n">validates_presence_of</span> <span class="ss">:description</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>可以简化为：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">SupportTicket</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">ActiveModel</span><span class="p">:</span><span class="ss">:Model</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:description</span>
</span><span class='line'>  <span class="n">validates_presence_of</span> <span class="ss">:title</span>
</span><span class='line'>  <span class="n">validates_presence_of</span> <span class="ss">:description</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code School笔记 - Zombie Outlaws level 1]]></title>
    <link href="http://blog.dacer.im/blog/2014/02/15/code-school-bi-ji-zombie-outlaws-level-1/"/>
    <updated>2014-02-15T15:10:57+08:00</updated>
    <id>http://blog.dacer.im/blog/2014/02/15/code-school-bi-ji-zombie-outlaws-level-1</id>
    <content type="html"><![CDATA[<h2>Ruby 1.9.3, ThreadSafety and Routes</h2>

<h3>Match Routes</h3>

<p>有两种方式</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>post '/somewhere', to: 'controller#action'
</span><span class='line'>match '/somewhere', to: 'controller#action', via: :post
</span><span class='line'>match '/somewhere', to: 'controller#action', via: :all</span></code></pre></td></tr></table></div></figure>


<h3>Concern</h3>

<p>用来简化route</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>concern :sociable do
</span><span class='line'>  resources :comments
</span><span class='line'>  resources :tags
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>resources :posts, concerns: :sociable
</span><span class='line'>resources :items, concerns: :sociable</span></code></pre></td></tr></table></div></figure>


<p>可以加上选项</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>concern :sociable do |options|
</span><span class='line'>  resources :comments, options
</span><span class='line'>  resources :tags, options
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>resources :msgs, concerns: :sociable
</span><span class='line'>resources :posts, concerns: :sociable
</span><span class='line'>resources :items do
</span><span class='line'>  concerns :sociable, only: :create
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>可以单独封装起来</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#app/concerns/sociable.rb</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Sociable</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">call</span><span class="p">(</span><span class="n">mapper</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>    <span class="n">mapper</span><span class="o">.</span><span class="n">resources</span> <span class="ss">:comments</span><span class="p">,</span> <span class="n">options</span>
</span><span class='line'>    <span class="n">mapper</span><span class="o">.</span><span class="n">resources</span> <span class="ss">:tags</span><span class="p">,</span> <span class="n">options</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#routes.rb</span>
</span><span class='line'><span class="n">concern</span> <span class="ss">:sociable</span><span class="err">，</span> <span class="no">Sociable</span>
</span><span class='line'><span class="c1">#...</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Thread-Safety</h3>

<p>In Rails 4</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">MyApp</span><span class="p">:</span><span class="ss">:Application</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">cache_classes</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">eager_load</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code School笔记 - Ruby Bits 2 Level 5 & 6]]></title>
    <link href="http://blog.dacer.im/blog/2014/02/14/code-schoolbi-ji-ruby-bits-2-level-5/"/>
    <updated>2014-02-14T15:40:25+08:00</updated>
    <id>http://blog.dacer.im/blog/2014/02/14/code-schoolbi-ji-ruby-bits-2-level-5</id>
    <content type="html"><![CDATA[<h2>DSL</h2>

<p>yield</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code School笔记 - Ruby Bits 2 Level 4]]></title>
    <link href="http://blog.dacer.im/blog/2014/02/14/code-schoolbi-ji-ruby-bits-2-level-4/"/>
    <updated>2014-02-14T15:40:25+08:00</updated>
    <id>http://blog.dacer.im/blog/2014/02/14/code-schoolbi-ji-ruby-bits-2-level-4</id>
    <content type="html"><![CDATA[<h2>Handling Missing Methods</h2>

<p>在class中可以定义一个<code>method_missing</code>方法，当调用这个class中不存在的方法时会变为调用此方法。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="n">method_name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">puts</span> <span class="s2">&quot;You tried to call </span><span class="si">#{</span><span class="n">method_name</span><span class="si">}</span><span class="s2"> with these arguments: </span><span class="si">#{</span><span class="n">args</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>    <span class="c1">#super 可以调用ruby default方法， raises a NoMehodError.</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="no">Tweet</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">submit</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="s2">&quot;Here&#39;s a tweet.&quot;</span><span class="p">)</span> <span class="c1"># You tried to call submit with arguments: [1, &quot;Here&#39;s a tweet.&quot;]</span>
</span></code></pre></td></tr></table></div></figure>


<p>利用<code>method_missing</code>可以简化很多代码，下例中就是把这个方法所在的class中的方法链接到<code>@user</code>的同名方法中了</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="n">method_name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@user</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">method_name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>把上面的代码改进一下可以限定方法名</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span>
</span><span class='line'>  <span class="no">DELEGATED_METHODS</span> <span class="o">=</span> <span class="o">[</span><span class="ss">:username</span><span class="p">,</span> <span class="ss">:avatar</span><span class="o">]</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@user</span> <span class="o">=</span> <span class="n">user</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="n">method_name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="k">if</span> <span class="no">DELEGATED_METHODS</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="n">method_name</span><span class="p">)</span>
</span><span class='line'>      <span class="vi">@user</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">method_name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>          <span class="k">super</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ruby也自带了一个<code>delegate</code>可以很方便的实现上述代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;delegate&#39;</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Tweet</span> <span class="o">&lt;</span> <span class="no">SimpleDelegator</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>    <span class="k">super</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>一个跟本节不相关的知识点</h3>

<p>正则表达式提取方法：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">match</span> <span class="o">=</span> <span class="nb">name</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/^hash_(/</span><span class="n">w</span><span class="o">+</span><span class="p">)</span><span class="o">/</span><span class="p">)</span>
</span><span class='line'><span class="n">match</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="k">if</span> <span class="n">match</span> <span class="c1">#返回符合的首个子字符串，如果存在的话</span>
</span><span class='line'>                  <span class="c1">#0为返回整个</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Respond_to?</h3>

<p>Tells us if an object responds to a given method<br/>
似乎可以翻译成回应一个object是否有所给的方法？</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">tweet</span> <span class="o">=</span> <span class="no">Tweet</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">tweet</span><span class="o">.</span><span class="n">respond_to?</span><span class="p">(</span><span class="ss">:to_s</span><span class="p">)</span> <span class="c1"># =&gt; true</span>
</span></code></pre></td></tr></table></div></figure>


<p>需要注意的是，用<code>method_missing</code>实现的方法在<code>respond_to?</code>下会返回false的，所以要做如下修改：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">respond_to?</span><span class="p">(</span><span class="n">method_name</span><span class="p">)</span>
</span><span class='line'>    <span class="n">method_name</span> <span class="o">=~</span> <span class="sr">/^hash_\w+/</span> <span class="o">||</span> <span class="k">super</span> <span class="c1"># ||的作用是在||之前不为nil的时候返回之前的，为nil的时候返回后者</span>
</span><span class='line'>    <span class="c1">#LIST.include?(method_name.to_s) || super #或者是从一个array中判断</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>但是这又带来了一个问题，<code>.method</code>方法仍是error</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">tweet</span><span class="o">.</span><span class="n">method</span><span class="p">(</span><span class="ss">:hash_ruby</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>在1.9.3以上版本中可以这样解决：变为<code>respond_to_missing?</code>，这样<code>method</code>就能正确返回一个 method object</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">respond_to_missing?</span><span class="p">(</span><span class="n">method_name</span><span class="p">)</span>
</span><span class='line'>  <span class="n">method_name</span> <span class="o">=~</span> <span class="sr">/^hash_\w+/</span> <span class="o">||</span> <span class="k">super</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>在 call 一个未定义方法时定义它</h3>

<p>其实我还不太理解这种用法的意义在哪儿。。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">method_missing</span><span class="p">(</span><span class="n">method_name</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>  <span class="n">match</span> <span class="o">=</span> <span class="n">method_name</span><span class="o">.</span><span class="n">to_s</span><span class="o">.</span><span class="n">match</span><span class="p">(</span><span class="sr">/^hash_(\w+)/</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">match</span>
</span><span class='line'>      <span class="nb">self</span><span class="o">.</span><span class="n">class</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>          <span class="n">define_method</span><span class="p">(</span><span class="n">method_name</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>          <span class="vi">@text</span> <span class="o">&lt;&lt;</span> <span class="s2">&quot; #&quot;</span> <span class="o">+</span> <span class="n">match</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="nb">send</span><span class="p">(</span><span class="n">method_name</span><span class="p">)</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>      <span class="k">super</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code School笔记 - Ruby Bits 2 Level 3]]></title>
    <link href="http://blog.dacer.im/blog/2014/02/13/code-schoolbi-ji-ruby-bits-2-level-3/"/>
    <updated>2014-02-13T15:40:25+08:00</updated>
    <id>http://blog.dacer.im/blog/2014/02/13/code-schoolbi-ji-ruby-bits-2-level-3</id>
    <content type="html"><![CDATA[<h2>Self</h2>

<p>在class外调用self会返回<code>main</code>，在class内调用会返回class本身。<br/>
如果在定义类中的方法时，在方法名前加<code>self</code>则这个方法会变成类似于Java的静态(static)方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">self</span><span class="o">.</span><span class="nf">f</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>
</span><span class='line'>    <span class="nb">p</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="nb">self</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">def</span> <span class="nc">Tweet</span><span class="o">.</span><span class="nf">f</span> <span class="o">.</span><span class="n">.</span><span class="o">.</span> <span class="c1">#与上方一致，但不常用</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="no">Tweet</span><span class="o">.</span><span class="n">f</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">)</span> <span class="c1"># =&gt; Tweet</span>
</span><span class='line'><span class="n">tweet</span> <span class="o">=</span> <span class="no">Tweet</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">tweet</span><span class="o">.</span><span class="n">f</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">)</span> <span class="c1"># Error!</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Class_eval</h3>

<p>重新打开一个class并往里面增加一些东西</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Tweet</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:user</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h4>用 class_eval 写一个MethodLogger</h4>

<p>就是记录方法的使用log</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">MethodLogger</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">log_method</span><span class="p">(</span><span class="n">klass</span><span class="p">,</span> <span class="n">method_name</span><span class="p">)</span> <span class="c1">#这里用klass是因为class在ruby中是预置的词</span>
</span><span class='line'>    <span class="n">klass</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">alias_method</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">method_name</span><span class="si">}</span><span class="s2">_original&quot;</span><span class="p">,</span> <span class="n">method_name</span>
</span><span class='line'>      <span class="n">define_method</span> <span class="n">method_name</span> <span class="k">do</span>
</span><span class='line'>        <span class="nb">p</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="si">}</span><span class="s2">: Called </span><span class="si">#{</span><span class="n">method_name</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>        <span class="nb">send</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">method_name</span><span class="si">}</span><span class="s2">_original&quot;</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1">#使用</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Test</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">t</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">logger</span> <span class="o">=</span> <span class="no">MethodLogger</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">logger</span><span class="o">.</span><span class="n">log_method</span><span class="p">(</span><span class="no">Test</span><span class="p">,</span> <span class="ss">:t</span><span class="p">)</span>
</span><span class='line'><span class="no">Test</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">t</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Instance_eval</h3>

<p>类似于class_eval</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code School笔记 - Ruby Bits 2 Level 2]]></title>
    <link href="http://blog.dacer.im/blog/2014/02/13/code-schoolbi-ji-ruby-bits-2-level-2/"/>
    <updated>2014-02-13T15:40:25+08:00</updated>
    <id>http://blog.dacer.im/blog/2014/02/13/code-schoolbi-ji-ruby-bits-2-level-2</id>
    <content type="html"><![CDATA[<h2>Dynamic Classes &amp; Methods</h2>

<h3>Struct</h3>

<p>在一个Class中如果包含的变量都在 initialize 中定义时可以用<code>Struct</code>简化，以下两种定义方式完全相同：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:user</span><span class="p">,</span> <span class="ss">:status</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">user</span><span class="p">,</span> <span class="n">status</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@user</span><span class="p">,</span> <span class="vi">@status</span> <span class="o">=</span> <span class="n">user</span><span class="p">,</span> <span class="n">status</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_s</span>
</span><span class='line'>    <span class="s2">&quot;</span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">: </span><span class="si">#{</span><span class="n">status</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Tweet</span> <span class="o">=</span> <span class="no">Struct</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:user</span><span class="p">,</span> <span class="ss">:status</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">to_s</span>
</span><span class='line'>    <span class="s2">&quot;</span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">: </span><span class="si">#{</span><span class="n">status</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果Class中无需其它方法，其中<code>do...end</code>部分也可以省略</p>

<h3>Alias_Method</h3>

<p>在一个Class中复制一个方法，仅改变方法名可以用<code>alias_method</code><br/>
读取一个变量的方法可以用<code>attr_reader</code>简写</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">tweets</span>
</span><span class='line'>  <span class="vi">@tweets</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">contents</span>
</span><span class='line'>  <span class="vi">@tweets</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#上下两组定义相等</span>
</span><span class='line'><span class="kp">attr_reader</span> <span class="ss">:tweets</span>
</span><span class='line'><span class="n">alias_method</span> <span class="ss">:contents</span><span class="p">,</span> <span class="ss">:tweets</span>
</span></code></pre></td></tr></table></div></figure>


<h3>动态生成方法</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Tweet</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">draft</span>
</span><span class='line'>  <span class="vi">@status</span> <span class="o">=</span> <span class="k">end</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">posted</span>
</span><span class='line'>  <span class="vi">@status</span> <span class="o">=</span> <span class="ss">:posted</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">deleted</span>
</span><span class='line'>      <span class="vi">@status</span> <span class="o">=</span> <span class="ss">:deleted</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#上下两个Class完全一致</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Tweet</span>
</span><span class='line'>  <span class="n">states</span> <span class="o">=</span> <span class="o">[</span><span class="ss">:draft</span><span class="p">,</span> <span class="ss">:posted</span><span class="p">,</span> <span class="ss">:deleted</span><span class="o">]</span>
</span><span class='line'>  <span class="n">states</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">status</span><span class="o">|</span>
</span><span class='line'>    <span class="n">define_method</span> <span class="n">status</span> <span class="k">do</span>
</span><span class='line'>      <span class="vi">@status</span> <span class="o">=</span> <span class="n">status</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果动态生成的方法需要参数则可以：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">define_method</span> <span class="n">m</span> <span class="k">do</span> <span class="o">|</span><span class="n">var</span><span class="o">|</span>
</span><span class='line'>  <span class="n">games</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">m</span><span class="p">,</span> <span class="n">var</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Send</h3>

<p><code>send</code>方法可以调用class中同名的方法(包括private,protected中的)<br/>
<code>public_send</code>则只能调用公共方法</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Timeline</span>
</span><span class='line'>  <span class="c1">#...</span>
</span><span class='line'>
</span><span class='line'>  <span class="kp">private</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">private_method</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">t</span> <span class="o">=</span> <span class="no">Timeline</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">private_method</span> <span class="c1">#ERROR</span>
</span><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">public_send</span><span class="p">(</span><span class="ss">:private_method</span><span class="p">)</span>
</span><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:private_method</span><span class="p">)</span>
</span><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s2">&quot;private_method&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">t</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="ss">:private_method</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="n">var</span><span class="p">)</span><span class="c1">#有参数时</span>
</span></code></pre></td></tr></table></div></figure>


<h3>The Method Method</h3>

<p><code>.method</code>方法可以得到一个class的方法并保存起来,再次调用的方式为<code>call</code>，类似于<code>Proc</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">show_method</span> <span class="o">=</span> <span class="n">timeline</span><span class="o">.</span><span class="n">method</span><span class="p">(</span><span class="ss">:show_tweet</span><span class="p">)</span>
</span><span class='line'><span class="n">show_method</span><span class="o">.</span><span class="n">call</span>
</span></code></pre></td></tr></table></div></figure>


<p>Turn the Method object into a Proc object:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="n">.</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">each</span><span class="p">(</span><span class="o">&amp;</span><span class="n">show_method</span><span class="p">)</span>
</span><span class='line'><span class="c1">#上下相同</span>
</span><span class='line'><span class="n">show_method</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'><span class="n">show_method</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[把主题微调了一下]]></title>
    <link href="http://blog.dacer.im/blog/2014/02/12/ba-zhu-ti-wei-diao-liao-yi-xia/"/>
    <updated>2014-02-12T21:42:33+08:00</updated>
    <id>http://blog.dacer.im/blog/2014/02/12/ba-zhu-ti-wei-diao-liao-yi-xia</id>
    <content type="html"><![CDATA[<p>先感谢<a href="http://github.com/macjasp/cleanpress">cleanpress</a>做出了这么简洁大方的主题，<br/>
但就是有几小点很别扭：</p>

<ul>
<li>Code 和 blockquote 的背景太深了</li>
<li>默认的英文字体在 Code 中的显示效果不好</li>
<li>Code 和 blockquote 下方有个很突兀的 margin</li>
<li>文章中h1下方的border离字太近了</li>
<li>文章标题下方的border又离的有点远</li>
</ul>


<p>于是顺手就改掉了现在看的超级舒服咩哈哈哈哈，操作过程太简单就不赘述了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Code School笔记 - Ruby Bits 2 Level 1]]></title>
    <link href="http://blog.dacer.im/blog/2014/02/12/code-schoolbi-ji-ruby-bits-2-level-1/"/>
    <updated>2014-02-12T19:02:51+08:00</updated>
    <id>http://blog.dacer.im/blog/2014/02/12/code-schoolbi-ji-ruby-bits-2-level-1</id>
    <content type="html"><![CDATA[<h2>Blocks, Procs and Lambdas</h2>

<p>Block保存可以使用<code>Proc.new</code>和<code>Lambda</code>.</p>

<h3>Proc.new</h3>

<p>Proc可以用<code>{}</code>或者<code>do end</code>来定义，<code>call</code>来执行</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">my_proc</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span><span class="p">{</span> <span class="nb">p</span> <span class="s2">&quot;proc&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">my_proc</span> <span class="o">=</span> <span class="no">Proc</span><span class="o">.</span><span class="n">new</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">p</span> <span class="s2">&quot;proc&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">my_proc</span><span class="o">.</span><span class="n">call</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Lambda</h3>

<p>Lambda可以直接用<code>= -&gt;</code>来定义<strong>(Ruby1.9以上)</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">my_proc</span> <span class="o">=</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="nb">p</span> <span class="s2">&quot;proc&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">my_proc</span> <span class="o">=</span> <span class="nb">lambda</span> <span class="k">do</span>
</span><span class='line'>  <span class="nb">p</span> <span class="s2">&quot;proc&quot;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">my_proc</span> <span class="o">=</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="nb">p</span> <span class="s2">&quot;proc&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">my_proc</span><span class="o">.</span><span class="n">call</span>
</span></code></pre></td></tr></table></div></figure>


<h3>使用场景</h3>

<p>可以把Proc直接作为变量传入方法的参数中</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">print</span><span class="p">(</span><span class="nb">proc</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">proc</span><span class="o">.</span><span class="n">call</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">my_proc</span> <span class="o">=</span> <span class="o">-&gt;</span> <span class="p">{</span> <span class="nb">p</span> <span class="s2">&quot;proc&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="nb">print</span><span class="p">(</span><span class="n">my_proc</span><span class="p">)</span> <span class="c1"># &quot;proc&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>需要注意</h3>

<p><code>&amp;</code>可以把proc变为block</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">tweets</span><span class="o">.</span><span class="n">each</span><span class="p">(</span><span class="o">&amp;</span><span class="n">printer</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>当定义的方法中需要用到 block 时可以：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="k">def</span> <span class="nf">each</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'>   <span class="n">tweets</span><span class="o">.</span><span class="n">each</span><span class="p">(</span><span class="o">&amp;</span><span class="n">block</span><span class="p">)</span>
</span><span class='line'> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>其它</h3>

<ul>
<li>在方法中用<code>block_given?</code>可以知道调用此方法时是否提供了block</li>
<li>lambda在生成时可以记住。。什么 <strong>需要回顾一下</strong></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">tweet_as</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span><span class='line'>  <span class="nb">lambda</span> <span class="p">{</span> <span class="o">|</span><span class="n">tweet</span><span class="o">|</span> <span class="nb">p</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">: </span><span class="si">#{</span><span class="n">tweet</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">dacer_tweet</span> <span class="o">=</span> <span class="n">tweet_as</span><span class="p">(</span><span class="s2">&quot;dacer&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">dacer_tweet</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="s2">&quot;Hello&quot;</span><span class="p">)</span> <span class="c1"># =&gt; dacer: Hello</span>
</span></code></pre></td></tr></table></div></figure>


<h3>个人想法</h3>

<p>Proc其实和<code>def</code>定义的方法一样是一串代码的集合，但是Proc可以作为参数放入方法中。<br/>
需要注意的是：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">proc</span> <span class="o">=</span> <span class="nb">lambda</span> <span class="p">{</span> <span class="o">|</span><span class="n">a</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">a</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">test</span><span class="p">(</span><span class="o">&amp;</span><span class="n">action</span><span class="p">)</span>
</span><span class='line'>  <span class="n">ary</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;a&quot;</span><span class="p">,</span><span class="s2">&quot;b&quot;</span><span class="p">,</span><span class="s2">&quot;c&quot;</span><span class="o">]</span>
</span><span class='line'>  <span class="n">ary</span><span class="o">.</span><span class="n">each</span><span class="p">(</span><span class="o">&amp;</span><span class="n">action</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">test</span> <span class="o">&amp;</span><span class="nb">proc</span>
</span></code></pre></td></tr></table></div></figure>


<p>中去掉任意一个<code>&amp;</code>时都会报错</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">in</span> <span class="sb">`each&#39;: wrong number of arguments (1 for 0) (ArgumentError)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[怎么把windows下的txt文件转为utf-8]]></title>
    <link href="http://blog.dacer.im/blog/2014/02/10/zen-yao-ba-windowsxia-de-txtwen-jian-zhuan-wei-utf-8/"/>
    <updated>2014-02-10T19:15:11+08:00</updated>
    <id>http://blog.dacer.im/blog/2014/02/10/zen-yao-ba-windowsxia-de-txtwen-jian-zhuan-wei-utf-8</id>
    <content type="html"><![CDATA[<p>Windows真是害人不浅- &ndash;#
在Mac下可以</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iconv -f gbk -t utf-8 a.txt  &gt; b.txt </span></code></pre></td></tr></table></div></figure>


<p>批量的话</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>find *.txt -exec sh -c "iconv -f gbk -t UTF8 {} &gt; c/{}.txt" \;  </span></code></pre></td></tr></table></div></figure>


<p>Ubuntu下可以</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>enconv *.txt</span></code></pre></td></tr></table></div></figure>


<p>a.txt是要转换的文件，gbk是简体系统下txt默认保存编码(大概。。)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Octopress]]></title>
    <link href="http://blog.dacer.im/blog/2014/02/10/hello-octopress/"/>
    <updated>2014-02-10T14:30:46+08:00</updated>
    <id>http://blog.dacer.im/blog/2014/02/10/hello-octopress</id>
    <content type="html"><![CDATA[<p>折腾了半天终于从Wordpress转到了Octopress，要说为什么要换成这个的话，这个本来就没什么流量的blog如果在VPS一直跑着Wordpress有点浪费，正好就来折腾一下这个还是挺方便的XD</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[学习笔记- ruby]]></title>
    <link href="http://blog.dacer.im/blog/2014/01/31/e5ada6e4b9a0e7ac94e8aeb0-ruby/"/>
    <updated>2014-01-31T20:47:17+08:00</updated>
    <id>http://blog.dacer.im/blog/2014/01/31/e5ada6e4b9a0e7ac94e8aeb0-ruby</id>
    <content type="html"><![CDATA[<p>yield</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[国产单机游戏]]></title>
    <link href="http://blog.dacer.im/blog/2014/01/06/e59bbde4baa7e58d95e69cbae6b8b8e6888f/"/>
    <updated>2014-01-06T00:42:41+08:00</updated>
    <id>http://blog.dacer.im/blog/2014/01/06/e59bbde4baa7e58d95e69cbae6b8b8e6888f</id>
    <content type="html"><![CDATA[<p>今天脑中无意间响起了幻想三国志3中游戏开始标题画面中放的“界线”，于是在脑中泛滥的一发不可收拾起来，在虾米中找出1到4代的歌听着，顺便搜了搜幻三的最近动态，发现这个系列最终还是停在了第四代，连防盗版用的服务器都关闭了，发放了官方的“离线破解补丁”。一晃这么多年过去了，这个优秀程度在我心目中不亚于仙剑的国产RPG就此迎来了终结。</p>

<p>说来惭愧，当时偷偷玩着电脑游戏的我是不敢花着父母的钱去买正版游戏的，本来想洋洋洒洒的写出主角们的爱恨情愁，但发现脑海中只余当时的我懵懵懂懂玩的场景，细细想来只记得某代主角刻骨铭心的爱情，为了爱侣不惜走遍千山万水。</p>

<p>打开宇峻奧汀科技（幻三开发公司）官网首页已没有了单机游戏的一席之地，</p>

<p>不知道若干年后的00 10后还会不会知道有国产rpg这个东西呢</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android上的一个神器『AIDE』]]></title>
    <link href="http://blog.dacer.im/blog/2013/12/23/androide4b88ae79a84e4b880e4b8aae7a59ee599a8e3808eaidee3808f/"/>
    <updated>2013-12-23T21:24:04+08:00</updated>
    <id>http://blog.dacer.im/blog/2013/12/23/androide4b88ae79a84e4b880e4b8aae7a59ee599a8e3808eaidee3808f</id>
    <content type="html"><![CDATA[<p>能直接在手机上git clone啊有木有！！</p>

<p>clone完了什么都不用改直接就能编译出apk了有木有！！</p>

<p>圣诞节出去旅游用手机就能修修bug 发布apk了有木有！！！</p>

<p>mba的轻便性跟手机比起来弱爆了有木有！！！</p>

<p>&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;正常向的分割线&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;</p>

<p>圣诞节某个软件要发布beta版本但是又要出去旅游怎么办呢，正在纠结带不带mba的时候突然想起来手机上就有一个IDE，下了试了试超级好用而且升级key圣诞节还打折就果断入手了！</p>

<p>此刻真是感动的痛哭流涕啊。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AndroidCharts 开发笔记]]></title>
    <link href="http://blog.dacer.im/blog/2013/11/15/androidcharts-e5bc80e58f91e7ac94e8aeb0/"/>
    <updated>2013-11-15T21:55:09+08:00</updated>
    <id>http://blog.dacer.im/blog/2013/11/15/androidcharts-e5bc80e58f91e7ac94e8aeb0</id>
    <content type="html"><![CDATA[<p>最近在为 <a href="http://www.pomotodo.com">www.pomotodo.com</a> 做 Android版的时候其中有三个设计的非常精致的统计视图，费了很大到劲把这三个图做出来之后想了想还是开源分享出来吧，其中 LineView 还是有些繁杂的，故写了本笔记。</p>

<p>虽然 Android 上已经有一个很棒到开源统计图了，但还是自己手写遍更有趣些不是嘛-,&ndash; 于是没怎么看那个就动手自己写了个这个。</p>

<p>Github: <a href="http://https://github.com/dacer/AndroidCharts">https://github.com/dacer/AndroidCharts</a></p>

<h2>LineView:</h2>

<h3>目标：</h3>

<ul>
<li><p>大部分的可见元素都能任意随时修改</p></li>
<li><p>可以修改一格所代表的数据大小（默认为1）</p></li>
<li><p>view 的高度和方格到宽度为固定值，这样便于之后的动画效果和保证在不同大小的设备上的一致性</p></li>
<li><p>在不同设备上完全的自适应</p></li>
</ul>


<h3>实现方式：</h3>

<p>最重要的为这三个 ArrayList:</p>

<ul>
<li><p>ArrayList<Integer> xCoordinateList : 背景中点的所有X坐标</p></li>
<li><p>ArrayList<Integer> yCoordinateList : 背景中点到所有Y坐标</p></li>
<li><p>ArrayList<Point> drawPointList;      : 数据所表示的点的坐标</p></li>
</ul>


<p>在每次更新数据后刷新这三个 List，然后根据这三个 List 可以很轻易的画出所有的元素。</p>

<p>但是点击后出现到 popup 会造成两个问题，</p>

<ol>
<li><p> 怎么样画一个这个出来，而且中间的字还要在正中央：这个的话已经写了个解法在之前的博文中，</p></li>
<li><p> 顶部的空间可能会不够显示最上方的点显示出的 popup：我先是在当前列表中的最大值的上方再加上一个格子，但这样有时还是不够，于是。。待续</p></li>
</ol>

]]></content>
  </entry>
  
</feed>
